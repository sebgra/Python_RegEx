# -*- coding: utf-8 -*-
"""Tuto_Expression_reguliere.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uD7yUKhVyCHrgObYXxonlCiORimfaJ7y
"""

import re

"""# Explications - Début et fin de chaîne

- ^ : matérialise le débvut de chaîne'
- $ : matérialise la fin de chaîne'
"""

c1 = 'chaton'
c2 = 'achat'

r1 = re.search(r'^cha',c1)
print('Results of r1 : ',r1)
r2 = re.search(r'^cha', c2)
print('Results of r2 : ',r2)

r3 = re.search(r't$',c1)
print('Results of r3 : ',r3)
r4 = re.search(r't$',c2)
print('Results of r4 : ',r4)

"""# Explication - Répétitions

-  \* : matérialise la répétition du caractère précèdant "*" (0,1,2,... répétitions)
- \+ : matérialise la répétition du caractère précèdant "+" (1 occurence ou plus)
- \? : matérialise la répétition du caractère précèdant "?" (0 ou 1 occurence)
- {} permet de préciser le nombre de répétitions du caractère précédant {} (synthaxe : {mini,maxi})
"""

c3 = 'chattière'
c4 = 'chatterton'
c5 = 'chapeau'
c6 = 'chat'

r5 = re.search(r'chat*',c3)
print('Results of r5 : ',r5)
r6 = re.search(r'chat*',c4)
print('Results of r6 : ',r6)
r7 = re.search(r'chat*',c5)
print('Results of r7 : ',r7)

print('---------------------')

r8 = re.search(r'chat+',c4)
print('Results of r8 : ',r8)
r9 = re.search(r'chat+',c5)
print('Results of r9 : ',r9)

print('---------------------')

r10 = re.search(r'chat?',c4)
print('Results of r10 : ',r10)
r11 = re.search(r'chat?',c5)
print('Results of r11 : ',r11)

print('---------------------')

r12 = re.search(r't{2}',c6)
print('Results of r12 : ',r12)
r13 = re.search(r't{1}',c5)
print('Results of r13 : ',r13)
r14 = re.search(r't{0,3}',c4)
print('Results of r14 : ',r14)

"""# Groupes & classes de caractères

- [abcd] : recherche de caractères du groupe a,b,c,d
- [A-Z] : recherche de lettres majuscules
- [a-z] : recherche de lettres minuscules
- [0-9] : recherche de chiffres
- [A-Za-z0-9] : recherche combinée

Attention lors de l'utilisation des groupes, la recherche débute en début de chaîne, il est nécessaire de préciser le nombre d'occurences

- (abc){x} : recherche du motif 'abc' présent x fois consécutivement
"""

c7 = 'ABRACADABRA' 
c8 = 'abracadabra'
c9 = 'Au79U'

r15 = re.search(r'[a-z]',c7)
print('Results of r15 : ',r15)
r16 = re.search(r'[A-Z]',c7)
print('results of r16 : ',r16)
r17 = re.search(r'[A-Z]{4}',c7)
print('Results of r17 : ',r17)
r18 = re.search(r'[0-9]',c9)
print('Results of r18 : ',r18)

print('-------------------')

c10 = 'cacatoes'
c11 = 'carreau'

r19 = re.search(r'(ca){2}',c10)
print('Results of r19 : ', r19)
r20 = re.search(r'(ca){2}',c11)
print('Results of r20 : ',r20)

"""# Compilation

Les compilation permettent de faire des RegEx des objets utilisables directement
"""

chn_mdp = r"[0-9]{6,}"
exp_mdp = re.compile(chn_mdp)

c12 = 'kjfj999999kggo'

r22 = exp_mdp.search(c12)

print('Results of r22 : ',r22)

exp_mdp



